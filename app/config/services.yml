# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    # KernelRequest listener
    extension.listener:
        class: AppBundle\EventListener\DoctrineExtensionListener
        calls:
            - [ setContainer, [ "@service_container" ] ]
        tags:
            # translatable sets locale after router processing
            - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            # translatable sets locale such as default application locale before command execute
            - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: -10 }


    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    entity_normalizer:
        class: AppBundle\Serializer\Normalizer\EntityNormalizer
        parent: serializer.normalizer.object
        tags:
            - { name: serializer.normalizer }

    serializer.annotation_loader:
      class: AppBundle\Serializer\Mapping\Loader\AnnotationLoader
      arguments: ["@annotations.reader"]

    serializer.mapping.class_metadata_factory:
      class: Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory
      public: false
      arguments: ["@serializer.annotation_loader"]

    fos_user.fos_subscriber:
      class: AppBundle\EventListener\FosUserListener
      tags:
          - { name: kernel.event_subscriber }

    app.crud_subscriber:
      class: AppBundle\EventListener\CrudSubscriber
      arguments: ["@service_container", "@request_stack"]
      tags:
          - { name: kernel.event_subscriber }

    app.list_results_subscriber:
      class: AppBundle\EventListener\ListResultsSubscriber
      arguments: ["@service_container"]
      tags:
          - { name: kernel.event_subscriber }

    app.mailer:
      class: AppBundle\Mailer\Mailer
      arguments: ["@mailer", "@templating", "%mailer_email_from%", "%website%"]
